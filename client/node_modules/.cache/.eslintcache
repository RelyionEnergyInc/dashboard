[{"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/index.tsx":"1","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/reportWebVitals.ts":"2","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/App.tsx":"3","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/http-common.ts":"4","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/gaugeModels.tsx":"5","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/listStaticDataSamples.js":"6","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/listLiveDataSamples.js":"7","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/services/datasample.service.ts":"8","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/store.tsx":"9","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/setStateVals.js":"10","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/chartModels.tsx":"11","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/test.js":"12","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/routes/root.tsx":"13","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/errorPage.jsx":"14"},{"size":964,"mtime":1666992680471,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1664313766674,"results":"17","hashOfConfig":"16"},{"size":5653,"mtime":1666990212574,"results":"18","hashOfConfig":"16"},{"size":169,"mtime":1664487516333,"results":"19","hashOfConfig":"16"},{"size":2281,"mtime":1666987666734,"results":"20","hashOfConfig":"16"},{"size":6849,"mtime":1665183337342,"results":"21","hashOfConfig":"16"},{"size":7553,"mtime":1665699586987,"results":"22","hashOfConfig":"16"},{"size":723,"mtime":1665701301160,"results":"23","hashOfConfig":"16"},{"size":2271,"mtime":1665615799873,"results":"24","hashOfConfig":"16"},{"size":280,"mtime":1665616740281,"results":"25","hashOfConfig":"16"},{"size":2297,"mtime":1666740374707,"results":"26","hashOfConfig":"16"},{"size":133,"mtime":1666306573799,"results":"27","hashOfConfig":"16"},{"size":638,"mtime":1666993262929,"results":"28","hashOfConfig":"16"},{"size":397,"mtime":1666992592783,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cov1vb",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/index.tsx",["75"],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/reportWebVitals.ts",[],[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/App.tsx",["76","77","78","79","80"],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/http-common.ts",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/gaugeModels.tsx",["81","82"],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/listStaticDataSamples.js",[],[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/listLiveDataSamples.js",["83","84","85","86","87","88","89","90","91","92","93"],[],"import React, { Component, useState, useEffect } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DataSampleService from \"../services/datasample.service\";\n// import { Container, width } from \"@mui/system\";\n\nimport useStore from '../store';\n\nimport { currentSample, idx, increaseIdx, value, setValue } from '../store';\n\nimport {setIdx, setCurrentSample} from '../setStateVals.js';\n\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n        fontSize: 18,\n    fontWeight: 'bold',\n  },\n  [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n    },\n    '&:hover': {\n        backgroundColor: '#f5f5f5',\n    },\n}));\n\nconst store = useStore.subscribe((state) => state.idx);\n\nexport default class ListLiveDataSamples extends Component {\n    // const setIdx = useStore((state) => state.setIdx);\n    constructor(props) {\n        super(props);\n        this.retrieveDataSamples = this.retrieveDataSamples.bind(this);\n        \n        this.state = {\n            dataSamples: [],\n            currentDataSample: null,\n            currentIndex: 1,\n        };\n    }\n\n\n    componentDidMount() {\n        setInterval(() => {\n            this.setState({\n                currentIndex: this.state.currentIndex + 1\n            });\n            console.log(\"incrementing index: \" + this.state.currentIndex);\n        \n        //Retrieve data samples from the server given the current index\n        DataSampleService.get(this.state.currentIndex)\n                .then(response => {\n                this.setState({\n                    dataSamples: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n            // setIdx(this.state.currentIndex);\n            setCurrentSample(this.state.dataSamples);\n        }, 1000);\n    }\n\n    simulateTimePassing() {\n        setInterval(() => {\n            const state = this.state;\n            this.setState({\n                currentIndex: state.currentIndex + 1\n            });\n            console.log(\"incrementing index: \" + this.state.currentIndex);\n        \n        //Retrieve data samples from the server given the current index\n        DataSampleService.get(this.state.currentIndex)\n                .then(response => {\n                this.setState({\n                    dataSamples: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n            // setIdx(this.state.currentIndex);\n            setCurrentSample(this.state.dataSamples);\n        }, 1000);\n        clearInterval(this.state.interval);\n        //Implement better handling of missing / not ready data samples\n    }\n\n\n\n    \n    \n\n    // componentDidMount() {\n    //     this.retrieveDataSamples();\n    //     console.log(\"mounting: \" + this.state.currentIndex);\n    // }\n    componentWillUnmount() {\n    // Clear the interval right before component unmount\n        clearInterval(this.state.interval);\n        console.log(\"unmounting: \" + this.state.currentIndex);\n    }\n\n    retrieveDataSamples() {\n        this.simulateTimePassing();\n    }\n\n    refreshDataSampleList() {\n        this.retrieveDataSamples();\n        this.setState({\n            currentDataSample: null,\n            currentIndex: -1\n        });\n    }\n\n    setActiveDataSample(dataSample, index) {\n        this.setState({\n            currentDataSample: dataSample,\n            currentIndex: index\n        });\n\n    }\n\n    \n\n    \n\n\n    render() {\n        const { dataSamples, currentDataSample, currentIndex } = this.state;\n\n        return (\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n            }}>\n        <div style={{padding: '1%'}}>   \n            <TableContainer component={Paper} sx={{maxHeight: \"70vh\"}} >\n                    <Table stickyHeader sx={{ \n                        width: \"100%\",\n                        backgroundColor: \"lightblue\",\n                        // border: \"1px solid black\",\n                        borderCollapse: \"collapse\",\n                        \n                    }} >\n                        <TableHead sx={{position: 'sticky'}}>\n                            <TableRow>\n                                <StyledTableCell>Time</StyledTableCell>\n                                <StyledTableCell>ID</StyledTableCell>\n                                <StyledTableCell>Freq</StyledTableCell>\n                                <StyledTableCell>Vab</StyledTableCell>\n                                <StyledTableCell>Vbc</StyledTableCell>\n                                <StyledTableCell>Vca</StyledTableCell>\n                                <StyledTableCell>Van</StyledTableCell>\n                                <StyledTableCell>Vbn</StyledTableCell>\n                                <StyledTableCell>Vcn</StyledTableCell>\n                                <StyledTableCell>pf</StyledTableCell>\n\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {dataSamples &&\n                                <StyledTableRow>\n                                    <StyledTableCell>{dataSamples.Time}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.id}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.freq}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.Vab}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.Vbc}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.Vca}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.Van}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.Vbn}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.Vcn}</StyledTableCell>\n                                    <StyledTableCell>{dataSamples.pf}</StyledTableCell>\n\n\n                                </StyledTableRow>\n                            }\n                        </TableBody>\n                    </Table>\n\n\n                    \n                    </TableContainer>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                      Getting Data Sample: <h4>{this.state.currentIndex}</h4>\n                    </div>\n                </div>\n                </div>\n        );\n    }\n}","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/services/datasample.service.ts",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/store.tsx",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/setStateVals.js",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/chartModels.tsx",["94","95"],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/test.js",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/routes/root.tsx",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/errorPage.jsx",[],[],{"ruleId":"96","severity":1,"message":"97","line":12,"column":3,"nodeType":"98","messageId":"99","endLine":12,"endColumn":8},{"ruleId":"96","severity":1,"message":"100","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":23},{"ruleId":"96","severity":1,"message":"101","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":17},{"ruleId":"96","severity":1,"message":"102","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":45,"column":6,"nodeType":"105","endLine":45,"endColumn":17,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"107","line":47,"column":9,"nodeType":"98","messageId":"99","endLine":47,"endColumn":24},{"ruleId":"96","severity":1,"message":"108","line":13,"column":11,"nodeType":"98","messageId":"99","endLine":13,"endColumn":26},{"ruleId":"96","severity":1,"message":"109","line":25,"column":11,"nodeType":"98","messageId":"99","endLine":25,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":1,"column":28,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"112","line":1,"column":38,"nodeType":"98","messageId":"99","endLine":1,"endColumn":47},{"ruleId":"110","severity":1,"message":"113","line":15,"column":10,"nodeType":"98","messageId":"99","endLine":15,"endColumn":23},{"ruleId":"110","severity":1,"message":"114","line":15,"column":25,"nodeType":"98","messageId":"99","endLine":15,"endColumn":28},{"ruleId":"110","severity":1,"message":"115","line":15,"column":30,"nodeType":"98","messageId":"99","endLine":15,"endColumn":41},{"ruleId":"110","severity":1,"message":"116","line":15,"column":43,"nodeType":"98","messageId":"99","endLine":15,"endColumn":48},{"ruleId":"110","severity":1,"message":"117","line":15,"column":50,"nodeType":"98","messageId":"99","endLine":15,"endColumn":58},{"ruleId":"110","severity":1,"message":"118","line":17,"column":9,"nodeType":"98","messageId":"99","endLine":17,"endColumn":15},{"ruleId":"110","severity":1,"message":"119","line":45,"column":7,"nodeType":"98","messageId":"99","endLine":45,"endColumn":12},{"ruleId":"110","severity":1,"message":"120","line":151,"column":30,"nodeType":"98","messageId":"99","endLine":151,"endColumn":47},{"ruleId":"110","severity":1,"message":"121","line":151,"column":49,"nodeType":"98","messageId":"99","endLine":151,"endColumn":61},{"ruleId":"96","severity":1,"message":"112","line":14,"column":10,"nodeType":"98","messageId":"99","endLine":14,"endColumn":19},{"ruleId":"96","severity":1,"message":"111","line":14,"column":21,"nodeType":"98","messageId":"99","endLine":14,"endColumn":29},"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'ListDataSamples' is defined but never used.","'TestGauge' is defined but never used.","'GaugeChart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'labels', 'vab', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setLabels(l => ...)' if you only need 'labels' in the 'setLabels' call.","ArrayExpression",["122"],"'gaugeArcLengths' is assigned a value but never used.","'GaugeModelProps' is defined but never used.","'MeterProps' is defined but never used.","no-unused-vars","'useState' is defined but never used.","'useEffect' is defined but never used.","'currentSample' is defined but never used.","'idx' is defined but never used.","'increaseIdx' is defined but never used.","'value' is defined but never used.","'setValue' is defined but never used.","'setIdx' is defined but never used.","'store' is assigned a value but never used.","'currentDataSample' is assigned a value but never used.","'currentIndex' is assigned a value but never used.",{"desc":"123","fix":"124"},"Update the dependencies array to be: [idx, freq, labels, values, vab]",{"range":"125","text":"126"},[1822,1833],"[idx, freq, labels, values, vab]"]