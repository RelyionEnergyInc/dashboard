[{"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/index.tsx":"1","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/reportWebVitals.ts":"2","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/App.tsx":"3","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/http-common.ts":"4","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/gaugeModels.tsx":"5","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/chartModels.js":"6","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/listStaticDataSamples.js":"7","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/listLiveDataSamples.js":"8","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/services/datasample.service.ts":"9","/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/store.tsx":"10"},{"size":554,"mtime":1665010460490,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1664313766674,"results":"13","hashOfConfig":"12"},{"size":1789,"mtime":1665528022283,"results":"14","hashOfConfig":"12"},{"size":169,"mtime":1664487516333,"results":"15","hashOfConfig":"12"},{"size":1634,"mtime":1665183767335,"results":"16","hashOfConfig":"12"},{"size":2265,"mtime":1665012147334,"results":"17","hashOfConfig":"12"},{"size":6849,"mtime":1665183337342,"results":"18","hashOfConfig":"12"},{"size":6334,"mtime":1665530448706,"results":"19","hashOfConfig":"12"},{"size":723,"mtime":1665096311799,"results":"20","hashOfConfig":"12"},{"size":2177,"mtime":1665528665378,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cov1vb",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/index.tsx",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/reportWebVitals.ts",[],[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/App.tsx",["57"],[],"import React from 'react';\nimport './App.css';\nimport ListDataSamples from './components/listStaticDataSamples';\nimport ListLiveDataSamples from './components/listLiveDataSamples';\nimport GaugeModels from './components/gaugeModels';\nimport LineChart from './components/chartModels';\n\n\nimport useStore from './store';\n\n\n\n\nfunction App() {\n  const idx = useStore.getState().idx;\n\n\n  return (\n    <div style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      // height: \"100vh\",\n      width: \"100vw\"\n\n    }}>\n      <div style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100vw\",\n        // padding: '5vw',\n        justifyContent: \"center\",\n      }}>\n        <ListLiveDataSamples />\n\n\n      </div>\n      <h2>{idx}</h2>\n\n      <div className='tile'>\n        <a href=\"#listDemoStaticContainer\"><h2>Show Static Data List</h2></a>\n      </div>\n      <div className='tile-content' id=\"listDemoStaticContainer\">\n        <ListDataSamples />\n      </div>\n      {/* <div className='tile'>\n        <a href=\"#listDemoLiveContainer\"><h2>Show Live Data List</h2></a>\n      </div> */}\n      {/* <div className='tile-content' id=\"listDemoLiveContainer\">\n        <ListLiveDataSamples />\n      </div> */}\n      <div className='tile'>\n        <a href=\"#gaugeDemoContainer\"><h2>Show Dynamic Gauges</h2></a>\n      </div>\n      <div className='tile-content' id=\"gaugeDemoContainer\">\n        <GaugeModels val1={50} val2={50} val3={50} />\n      </div>\n      <div className='tile'>\n        <a href=\"#widgetDemoContainer\"><h2>Show Dynamic Charts</h2></a>\n      </div>\n      <div className='tile-content' id=\"widgetDemoContainer\">\n        {/* <LineChart /> */}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/http-common.ts",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/gaugeModels.tsx",["58","59"],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/chartModels.js",["60"],[],"import React from \"react\";\n\n\nimport { ReactDOM } from \"react\";\nimport ApexCharts from 'apexcharts'\nimport {ReactApexChart, getNewSeries} from \"apexcharts\";\n\n// Testing out ApexCharts for dashboard use\n// Demo adapted from https://apexcharts.com/react-chart-demos/line-charts/realtime/\nexport default class LineChart extends React.Component {\n        constructor(props) {\n          super(props);\n\n          this.state = {\n          \n              series: [{\n                data:[[1324508400000, 34], [1324594800000, 54] , [1326236400000, 43]]\n            }],\n            options: {\n              chart: {\n                id: 'realtime',\n                height: 350,\n                type: 'line',\n                animations: {\n                  enabled: true,\n                  easing: 'linear',\n                  dynamicAnimation: {\n                    speed: 1000\n                  }\n                },\n                toolbar: {\n                  show: false\n                },\n                zoom: {\n                  enabled: false\n                }\n              },\n              dataLabels: {\n                enabled: false\n              },\n              stroke: {\n                curve: 'smooth'\n              },\n              title: {\n                text: 'Dynamic Updating Chart',\n                align: 'left'\n              },\n              markers: {\n                size: 0\n              },\n              xaxis: {\n                type: 'datetime',\n                // range: XAXISRANGE,\n              },\n              yaxis: {\n                max: 100\n              },\n              legend: {\n                show: false\n              },\n            },\n          \n          \n          };\n        }\n\n      \n        componentDidMount() {\n          window.setInterval(() => {\n            getNewSeries(this.lastDate, {\n              min: 10,\n              max: 90\n            })\n            \n            ApexCharts.exec('realtime', 'updateSeries', [{\n              data: this.data\n            }])\n          }, 1000)\n        }\n      \n\n        render() {\n          return (\n            \n\n\n      <div id=\"chart\">\n  <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\n</div>\n    \n\n\n          );\n        }\n      }",[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/listStaticDataSamples.js",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/listLiveDataSamples.js",["61","62","63","64","65","66","67","68","69","70","71"],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/services/datasample.service.ts",[],[],"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/store.tsx",[],[],{"ruleId":"72","severity":1,"message":"73","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":17},{"ruleId":"72","severity":1,"message":"76","line":1,"column":20,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"77","line":46,"column":9,"nodeType":"74","messageId":"75","endLine":46,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":18},{"ruleId":"78","severity":1,"message":"80","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"81","line":1,"column":38,"nodeType":"74","messageId":"75","endLine":1,"endColumn":47},{"ruleId":"78","severity":1,"message":"82","line":13,"column":8,"nodeType":"74","messageId":"75","endLine":13,"endColumn":16},{"ruleId":"78","severity":1,"message":"83","line":15,"column":10,"nodeType":"74","messageId":"75","endLine":15,"endColumn":23},{"ruleId":"78","severity":1,"message":"84","line":15,"column":25,"nodeType":"74","messageId":"75","endLine":15,"endColumn":41},{"ruleId":"78","severity":1,"message":"85","line":15,"column":43,"nodeType":"74","messageId":"75","endLine":15,"endColumn":46},{"ruleId":"78","severity":1,"message":"86","line":15,"column":48,"nodeType":"74","messageId":"75","endLine":15,"endColumn":54},{"ruleId":"78","severity":1,"message":"87","line":15,"column":56,"nodeType":"74","messageId":"75","endLine":15,"endColumn":61},{"ruleId":"78","severity":1,"message":"88","line":15,"column":63,"nodeType":"74","messageId":"75","endLine":15,"endColumn":71},{"ruleId":"78","severity":1,"message":"89","line":115,"column":30,"nodeType":"74","messageId":"75","endLine":115,"endColumn":47},{"ruleId":"78","severity":1,"message":"90","line":115,"column":49,"nodeType":"74","messageId":"75","endLine":115,"endColumn":61},"@typescript-eslint/no-unused-vars","'LineChart' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'values' is assigned a value but never used.","no-unused-vars","'ReactDOM' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useStore' is defined but never used.","'currentSample' is defined but never used.","'setCurrentSample' is defined but never used.","'idx' is defined but never used.","'setIdx' is defined but never used.","'value' is defined but never used.","'setValue' is defined but never used.","'currentDataSample' is assigned a value but never used.","'currentIndex' is assigned a value but never used."]