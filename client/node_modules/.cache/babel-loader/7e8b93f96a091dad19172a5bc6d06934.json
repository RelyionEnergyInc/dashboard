{"ast":null,"code":"var _jsxFileName = \"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/chartModels.js\";\nimport React from \"react\";\nimport { ReactDOM } from \"react\";\nimport ApexCharts from 'apexcharts';\nimport { ReactApexChart, getNewSeries } from \"apexcharts\"; // Testing out ApexCharts for dashboard use\n// Demo adapted from https://apexcharts.com/react-chart-demos/line-charts/realtime/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [{\n        data: [[1324508400000, 34], [1324594800000, 54], [1326236400000, 43]]\n      }],\n      options: {\n        chart: {\n          id: 'realtime',\n          height: 350,\n          type: 'line',\n          animations: {\n            enabled: true,\n            easing: 'linear',\n            dynamicAnimation: {\n              speed: 1000\n            }\n          },\n          toolbar: {\n            show: false\n          },\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 'Dynamic Updating Chart',\n          align: 'left'\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime',\n          range: XAXISRANGE\n        },\n        yaxis: {\n          max: 100\n        },\n        legend: {\n          show: false\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.setInterval(() => {\n      getNewSeries(this.lastDate, {\n        min: 10,\n        max: 90\n      });\n      ApexCharts.exec('realtime', 'updateSeries', [{\n        data: this.data\n      }]);\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"line\",\n        height: 350\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","ReactDOM","ApexCharts","ReactApexChart","getNewSeries","LineChart","Component","constructor","props","state","series","data","options","chart","id","height","type","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","dataLabels","stroke","curve","title","text","align","markers","size","xaxis","range","XAXISRANGE","yaxis","max","legend","componentDidMount","window","setInterval","lastDate","min","exec","render"],"sources":["/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/chartModels.js"],"sourcesContent":["import React from \"react\";\n\n\nimport { ReactDOM } from \"react\";\nimport ApexCharts from 'apexcharts'\nimport {ReactApexChart, getNewSeries} from \"apexcharts\";\n\n// Testing out ApexCharts for dashboard use\n// Demo adapted from https://apexcharts.com/react-chart-demos/line-charts/realtime/\nexport default class LineChart extends React.Component {\n        constructor(props) {\n          super(props);\n\n          this.state = {\n          \n              series: [{\n                data:[[1324508400000, 34], [1324594800000, 54] , [1326236400000, 43]]\n            }],\n            options: {\n              chart: {\n                id: 'realtime',\n                height: 350,\n                type: 'line',\n                animations: {\n                  enabled: true,\n                  easing: 'linear',\n                  dynamicAnimation: {\n                    speed: 1000\n                  }\n                },\n                toolbar: {\n                  show: false\n                },\n                zoom: {\n                  enabled: false\n                }\n              },\n              dataLabels: {\n                enabled: false\n              },\n              stroke: {\n                curve: 'smooth'\n              },\n              title: {\n                text: 'Dynamic Updating Chart',\n                align: 'left'\n              },\n              markers: {\n                size: 0\n              },\n              xaxis: {\n                type: 'datetime',\n                range: XAXISRANGE,\n              },\n              yaxis: {\n                max: 100\n              },\n              legend: {\n                show: false\n              },\n            },\n          \n          \n          };\n        }\n\n      \n        componentDidMount() {\n          window.setInterval(() => {\n            getNewSeries(this.lastDate, {\n              min: 10,\n              max: 90\n            })\n            \n            ApexCharts.exec('realtime', 'updateSeries', [{\n              data: this.data\n            }])\n          }, 1000)\n        }\n      \n\n        render() {\n          return (\n            \n\n\n      <div id=\"chart\">\n  <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\n</div>\n    \n\n\n          );\n        }\n      }"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,YAA3C,C,CAEA;AACA;;;AACA,eAAe,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;EAC/CC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MAETC,MAAM,EAAE,CAAC;QACPC,IAAI,EAAC,CAAC,CAAC,aAAD,EAAgB,EAAhB,CAAD,EAAsB,CAAC,aAAD,EAAgB,EAAhB,CAAtB,EAA4C,CAAC,aAAD,EAAgB,EAAhB,CAA5C;MADE,CAAD,CAFC;MAKXC,OAAO,EAAE;QACPC,KAAK,EAAE;UACLC,EAAE,EAAE,UADC;UAELC,MAAM,EAAE,GAFH;UAGLC,IAAI,EAAE,MAHD;UAILC,UAAU,EAAE;YACVC,OAAO,EAAE,IADC;YAEVC,MAAM,EAAE,QAFE;YAGVC,gBAAgB,EAAE;cAChBC,KAAK,EAAE;YADS;UAHR,CAJP;UAWLC,OAAO,EAAE;YACPC,IAAI,EAAE;UADC,CAXJ;UAcLC,IAAI,EAAE;YACJN,OAAO,EAAE;UADL;QAdD,CADA;QAmBPO,UAAU,EAAE;UACVP,OAAO,EAAE;QADC,CAnBL;QAsBPQ,MAAM,EAAE;UACNC,KAAK,EAAE;QADD,CAtBD;QAyBPC,KAAK,EAAE;UACLC,IAAI,EAAE,wBADD;UAELC,KAAK,EAAE;QAFF,CAzBA;QA6BPC,OAAO,EAAE;UACPC,IAAI,EAAE;QADC,CA7BF;QAgCPC,KAAK,EAAE;UACLjB,IAAI,EAAE,UADD;UAELkB,KAAK,EAAEC;QAFF,CAhCA;QAoCPC,KAAK,EAAE;UACLC,GAAG,EAAE;QADA,CApCA;QAuCPC,MAAM,EAAE;UACNf,IAAI,EAAE;QADA;MAvCD;IALE,CAAb;EAmDD;;EAGDgB,iBAAiB,GAAG;IAClBC,MAAM,CAACC,WAAP,CAAmB,MAAM;MACvBrC,YAAY,CAAC,KAAKsC,QAAN,EAAgB;QAC1BC,GAAG,EAAE,EADqB;QAE1BN,GAAG,EAAE;MAFqB,CAAhB,CAAZ;MAKAnC,UAAU,CAAC0C,IAAX,CAAgB,UAAhB,EAA4B,cAA5B,EAA4C,CAAC;QAC3CjC,IAAI,EAAE,KAAKA;MADgC,CAAD,CAA5C;IAGD,CATD,EASG,IATH;EAUD;;EAGDkC,MAAM,GAAG;IACP,oBAIJ;MAAK,EAAE,EAAC,OAAR;MAAA,uBACJ,QAAC,cAAD;QAAgB,OAAO,EAAE,KAAKpC,KAAL,CAAWG,OAApC;QAA6C,MAAM,EAAE,KAAKH,KAAL,CAAWC,MAAhE;QAAwE,IAAI,EAAC,MAA7E;QAAoF,MAAM,EAAE;MAA5F;QAAA;QAAA;QAAA;MAAA;IADI;MAAA;MAAA;MAAA;IAAA,QAJI;EAWD;;AApF8C"},"metadata":{},"sourceType":"module"}