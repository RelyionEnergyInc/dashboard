{"ast":null,"code":"// import create from 'zustand';\nimport { configureStore } from '@reduxjs/toolkit';\nimport sampleReducer from './sampleStateSlice'; // export interface DemoState {\n//     currentSample: DataSample;\n//     idx: number;\n//     value: number;\n// }\n\nexport const store = configureStore({\n  reducer: {\n    currentSample: sampleReducer,\n    idx: sampleReducer,\n    value: sampleReducer\n  }\n}); // export const useStore = create<DemoState>((set) => ({\n//     currentSample: {\n//         id: 0,\n//         time: new Date(),\n//         freq: 0,\n//         Vab: 0,\n//         Vbc: 0,\n//         Vca: 0,\n//         Van: 0,\n//         Vbn: 0,\n//         Vcn: 0,\n//         pf: 0,\n//         'Real Power': 0,\n//         'Reactive Power': 0,\n//         'Apparent Power': 0,\n//         Ia: 0,\n//         Ib: 0,\n//         Ic: 0,\n//         'P2 Ctrl Method': 0,\n//         'P2 throttle setpt': 0,\n//         'P2 current setpt': 0,\n//         'P2 power setpt': 0,\n//         'P2 voltage setpt': 0,\n//         'P2 Vmax Limit': 0,\n//         'P2 Vmin Limit': 0,\n//         'P2 Dischg PWR limit': 0,\n//         'P2 Chrg PWR limit': 0,\n//         'P2 Current limit': 0,\n//         'P2 Voltage': 0,\n//         'P2 Power': 0,\n//         'P2 Current': 0,\n//         'P3 Ctrl Method': 0,\n//         'P3 throttle setpt': 0,\n//         'P3 current setpt': 0,\n//         'P3 power setpt': 0,\n//         'P3 voltage setpt': 0,\n//         'P3 Vmax Limit': 0,\n//         'P3 Vmin Limit': 0,\n//         'P3 Dischg PWR limit': 0,\n//         'P3 Chrg PWR limit': 0,\n//         'P3 Current limit': 0,\n//         'P3 Voltage': 0,\n//         'P3 Power': 0,\n//         'P3 Current': 0,\n//         'Avg PM Temp': 0,\n//         'AC PM Temp': 0,\n//         'DC PM Temp': 0,\n//         'Onboard Temp': 0,\n//         'Fan Speed': 0,\n//         'System Status': 0,\n//         'System Power': 0,\n//         'Grid Support Status': 0,\n//         'Link Peak Voltage': 0,\n//         'Link Peak Current': 0,\n//         'Grid Level Status': 0,\n//         'Grid Stop Status': 0,\n//         'Pack P2 Voltage': 0,\n//         'Pack P3 Voltage': 0,\n//     },\n//     setCurrentSample: (sample: DataSample) => set(() => ({ currentSample: sample })),\n//     idx: 0,\n//     setIdx: (idx) =>\n//         set((state) => ({\n//             ...state,\n//             idx\n//         })),\n//     value: 0,\n//     setValue: (value) =>\n//         set((state) => ({\n//             ...state,\n//             value\n//         }))\n// }));","map":{"version":3,"names":["configureStore","sampleReducer","store","reducer","currentSample","idx","value"],"sources":["/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/store.tsx"],"sourcesContent":["// import create from 'zustand';\nimport { createContext } from 'react';\nimport { configureStore } from '@reduxjs/toolkit';\nimport DataSample from './types/datasample.type';\nimport sampleReducer from './sampleStateSlice';\n\n// export interface DemoState {\n//     currentSample: DataSample;\n//     idx: number;\n//     value: number;\n// }\n\nexport const store = configureStore({\n    reducer: {\n        currentSample: sampleReducer,\n        idx: sampleReducer,\n        value: sampleReducer,\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\n\n// export const useStore = create<DemoState>((set) => ({\n//     currentSample: {\n//         id: 0,\n//         time: new Date(),\n//         freq: 0,\n//         Vab: 0,\n//         Vbc: 0,\n//         Vca: 0,\n//         Van: 0,\n//         Vbn: 0,\n//         Vcn: 0,\n//         pf: 0,\n//         'Real Power': 0,\n//         'Reactive Power': 0,\n//         'Apparent Power': 0,\n//         Ia: 0,\n//         Ib: 0,\n//         Ic: 0,\n//         'P2 Ctrl Method': 0,\n//         'P2 throttle setpt': 0,\n//         'P2 current setpt': 0,\n//         'P2 power setpt': 0,\n//         'P2 voltage setpt': 0,\n//         'P2 Vmax Limit': 0,\n//         'P2 Vmin Limit': 0,\n//         'P2 Dischg PWR limit': 0,\n//         'P2 Chrg PWR limit': 0,\n//         'P2 Current limit': 0,\n//         'P2 Voltage': 0,\n//         'P2 Power': 0,\n//         'P2 Current': 0,\n//         'P3 Ctrl Method': 0,\n//         'P3 throttle setpt': 0,\n//         'P3 current setpt': 0,\n//         'P3 power setpt': 0,\n//         'P3 voltage setpt': 0,\n//         'P3 Vmax Limit': 0,\n//         'P3 Vmin Limit': 0,\n//         'P3 Dischg PWR limit': 0,\n//         'P3 Chrg PWR limit': 0,\n//         'P3 Current limit': 0,\n//         'P3 Voltage': 0,\n//         'P3 Power': 0,\n//         'P3 Current': 0,\n//         'Avg PM Temp': 0,\n//         'AC PM Temp': 0,\n//         'DC PM Temp': 0,\n//         'Onboard Temp': 0,\n//         'Fan Speed': 0,\n//         'System Status': 0,\n//         'System Power': 0,\n//         'Grid Support Status': 0,\n//         'Link Peak Voltage': 0,\n//         'Link Peak Current': 0,\n//         'Grid Level Status': 0,\n//         'Grid Stop Status': 0,\n//         'Pack P2 Voltage': 0,\n//         'Pack P3 Voltage': 0,\n//     },\n//     setCurrentSample: (sample: DataSample) => set(() => ({ currentSample: sample })),\n\n//     idx: 0,\n//     setIdx: (idx) =>\n//         set((state) => ({\n//             ...state,\n//             idx\n//         })),\n//     value: 0,\n//     setValue: (value) =>\n//         set((state) => ({\n//             ...state,\n//             value\n//         }))\n\n// }));\n\n"],"mappings":"AAAA;AAEA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,aAAP,MAA0B,oBAA1B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAChCG,OAAO,EAAE;IACLC,aAAa,EAAEH,aADV;IAELI,GAAG,EAAEJ,aAFA;IAGLK,KAAK,EAAEL;EAHF;AADuB,CAAD,CAA5B,C,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}