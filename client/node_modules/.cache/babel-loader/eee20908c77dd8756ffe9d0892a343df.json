{"ast":null,"code":"var _jsxFileName = \"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/gaugeModels.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Meter(props) {\n  var options = {\n    chart: {\n      height: 350,\n      type: 'radialBar'\n    },\n    series: [props.value],\n    colors: ['#008FFB'],\n    plotOptions: {\n      radialBar: {\n        startAngle: -135,\n        endAngle: 135,\n        track: {\n          background: '#e7e7e7',\n          startAngle: -135,\n          endAngle: 135\n        },\n        dataLabels: {\n          name: {\n            show: false\n          },\n          value: {\n            fontSize: '22px',\n            show: true\n          }\n        }\n      }\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'horizontal',\n        shadeIntensity: 0.5,\n        gradientToColors: ['#87D4F9'],\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100]\n      }\n    },\n    stroke: {\n      lineCap: 'round'\n    },\n    labels: ['Frequency']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_c = Meter;\nconst gaugeStyle = {\n  maxWidth: \"20vw\",\n  height: 250\n};\n//NOTE\n//Input values must be converted to a percentage before being passed to a Gauge component\nexport default function GaugeModels(props) {\n  _s();\n\n  const values = [50, 73, 21, 35, 45, 93, 62, 75, 32, 9, 100];\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    setTimeout(() => setCounter(counter + 1), 1000);\n  }, [counter]); // console.log(values[counter % values.length]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\"\n    },\n    children: [props.val1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gaugeStyle,\n      children: /*#__PURE__*/_jsxDEV(Meter, {\n        value: props.val1,\n        max: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), props.val2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gaugeStyle,\n      children: /*#__PURE__*/_jsxDEV(Meter, {\n        value: props.val2,\n        max: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), props.val3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gaugeStyle,\n      children: /*#__PURE__*/_jsxDEV(Meter, {\n        value: props.val3,\n        max: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GaugeModels, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\n_c2 = GaugeModels;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Meter\");\n$RefreshReg$(_c2, \"GaugeModels\");","map":{"version":3,"names":["useState","useEffect","Meter","props","options","chart","height","type","series","value","colors","plotOptions","radialBar","startAngle","endAngle","track","background","dataLabels","name","show","fontSize","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","stroke","lineCap","labels","gaugeStyle","maxWidth","GaugeModels","values","counter","setCounter","setTimeout","display","flexDirection","alignItems","justifyContent","val1","val2","val3"],"sources":["/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/gaugeModels.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\n\nimport ApexCharts from 'apexcharts'\n\n// import GaugeChart from 'react-gauge-chart';\n\n\ninterface MeterProps {\n  value: number;\n  max: number;\n}\n\n\n\n\nexport function Meter(props: MeterProps) {\n  var options = {\n    chart: {\n      height: 350,\n      type: 'radialBar',\n    },\n    series: [props.value],\n    colors: ['#008FFB'],\n    plotOptions: {\n      radialBar: {\n        startAngle: -135,\n        endAngle: 135,\n        track: {\n          background: '#e7e7e7',\n          startAngle: -135,\n          endAngle: 135,\n        },\n        dataLabels: {\n          name: {\n            show: false,\n          },\n          value: {\n            fontSize: '22px',\n            show: true,\n          },\n        },\n      },\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'horizontal',\n        shadeIntensity: 0.5,\n        gradientToColors: ['#87D4F9'],\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100],\n      },\n    },\n    stroke: {\n      lineCap: 'round',\n    },\n    labels: ['Frequency'],\n  };\n\n\n\n\n  return (\n    <div id='chart' />\n  )\n}\n\nconst gaugeStyle = {\n  maxWidth: \"20vw\",\n  height: 250,\n}\n\ninterface GaugeProps {\n  val1?: number;\n  val2?: number;\n  val3?: number;\n  unit1?: string;\n  unit2?: string;\n  unit3?: string;\n}\n\n//NOTE\n//Input values must be converted to a percentage before being passed to a Gauge component\n\nexport default function GaugeModels(props: GaugeProps) {\n  const values = [50, 73, 21, 35, 45, 93, 62, 75, 32, 9, 100];\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => setCounter(counter + 1), 1000);\n  }, [counter]);\n\n  // console.log(values[counter % values.length]);\n  return (\n    <div style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n    }}>\n      {props.val1 &&\n        <div style={gaugeStyle}>\n          <Meter value={props.val1} max={100} />\n        </div>\n      }\n      {props.val2 &&\n        <div style={gaugeStyle}>\n          <Meter value={props.val2} max={100} />\n        </div>\n      }\n      {props.val3 &&\n        <div style={gaugeStyle}>\n          <Meter value={props.val3} max={100} />\n        </div>\n      }\n    </div>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}