{"ast":null,"code":"// import create from 'zustand';\nimport { configureStore } from '@reduxjs/toolkit';\n// export interface DemoState {\n//     currentSample: DataSample;\n//     idx: number;\n//     value: number;\n// }\nexport const store = configureStore({\n  reducer: {\n    currentSample: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        id: 0,\n        time: new Date(),\n        freq: 0,\n        Vab: 0,\n        Vbc: 0,\n        Vca: 0,\n        Van: 0,\n        Vbn: 0,\n        Vcn: 0,\n        pf: 0,\n        'Real Power': 0,\n        'Reactive Power': 0,\n        'Apparent Power': 0,\n        Ia: 0,\n        Ib: 0,\n        Ic: 0,\n        'P2 Ctrl Method': 0,\n        'P2 throttle setpt': 0,\n        'P2 current setpt': 0,\n        'P2 power setpt': 0,\n        'P2 voltage setpt': 0,\n        'P2 Vmax Limit': 0,\n        'P2 Vmin Limit': 0,\n        'P2 Dischg PWR limit': 0,\n        'P2 Chrg PWR limit': 0,\n        'P2 Current limit': 0,\n        'P2 Voltage': 0,\n        'P2 Power': 0,\n        'P2 Current': 0,\n        'P3 Ctrl Method': 0,\n        'P3 throttle setpt': 0,\n        'P3 current setpt': 0,\n        'P3 power setpt': 0,\n        'P3 voltage setpt': 0,\n        'P3 Vmax Limit': 0,\n        'P3 Vmin Limit': 0,\n        'P3 Dischg PWR limit': 0,\n        'P3 Chrg PWR limit': 0,\n        'P3 Current limit': 0,\n        'P3 Voltage': 0,\n        'P3 Power': 0,\n        'P3 Current': 0,\n        'Avg PM Temp': 0,\n        'AC PM Temp': 0,\n        'DC PM Temp': 0,\n        'Onboard Temp': 0,\n        'Fan Speed': 0,\n        'System Status': 0,\n        'System Power': 0,\n        'Grid Support Status': 0,\n        'Link Peak Voltage': 0,\n        'Link Peak Current': 0,\n        'Grid Level Status': 0,\n        'Grid Stop Status': 0,\n        'Pack P2 Voltage': 0,\n        'Pack P3 Voltage': 0\n      };\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n\n      switch (action.type) {\n        case 'SET_CURRENT_SAMPLE':\n          return action.payload;\n\n        default:\n          return state;\n      }\n    },\n    idx: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n\n      switch (action.type) {\n        case 'SET_IDX':\n          return action.payload;\n\n        default:\n          return state;\n      }\n    },\n    value: function () {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n\n      switch (action.type) {\n        case 'SET_VALUE':\n          return action.payload;\n\n        default:\n          return state;\n      }\n    }\n  }\n}); // export const useStore = create<DemoState>((set) => ({\n//     currentSample: {\n//         id: 0,\n//         time: new Date(),\n//         freq: 0,\n//         Vab: 0,\n//         Vbc: 0,\n//         Vca: 0,\n//         Van: 0,\n//         Vbn: 0,\n//         Vcn: 0,\n//         pf: 0,\n//         'Real Power': 0,\n//         'Reactive Power': 0,\n//         'Apparent Power': 0,\n//         Ia: 0,\n//         Ib: 0,\n//         Ic: 0,\n//         'P2 Ctrl Method': 0,\n//         'P2 throttle setpt': 0,\n//         'P2 current setpt': 0,\n//         'P2 power setpt': 0,\n//         'P2 voltage setpt': 0,\n//         'P2 Vmax Limit': 0,\n//         'P2 Vmin Limit': 0,\n//         'P2 Dischg PWR limit': 0,\n//         'P2 Chrg PWR limit': 0,\n//         'P2 Current limit': 0,\n//         'P2 Voltage': 0,\n//         'P2 Power': 0,\n//         'P2 Current': 0,\n//         'P3 Ctrl Method': 0,\n//         'P3 throttle setpt': 0,\n//         'P3 current setpt': 0,\n//         'P3 power setpt': 0,\n//         'P3 voltage setpt': 0,\n//         'P3 Vmax Limit': 0,\n//         'P3 Vmin Limit': 0,\n//         'P3 Dischg PWR limit': 0,\n//         'P3 Chrg PWR limit': 0,\n//         'P3 Current limit': 0,\n//         'P3 Voltage': 0,\n//         'P3 Power': 0,\n//         'P3 Current': 0,\n//         'Avg PM Temp': 0,\n//         'AC PM Temp': 0,\n//         'DC PM Temp': 0,\n//         'Onboard Temp': 0,\n//         'Fan Speed': 0,\n//         'System Status': 0,\n//         'System Power': 0,\n//         'Grid Support Status': 0,\n//         'Link Peak Voltage': 0,\n//         'Link Peak Current': 0,\n//         'Grid Level Status': 0,\n//         'Grid Stop Status': 0,\n//         'Pack P2 Voltage': 0,\n//         'Pack P3 Voltage': 0,\n//     },\n//     setCurrentSample: (sample: DataSample) => set(() => ({ currentSample: sample })),\n//     idx: 0,\n//     setIdx: (idx) =>\n//         set((state) => ({\n//             ...state,\n//             idx\n//         })),\n//     value: 0,\n//     setValue: (value) =>\n//         set((state) => ({\n//             ...state,\n//             value\n//         }))\n// }));","map":{"version":3,"names":["configureStore","store","reducer","currentSample","state","id","time","Date","freq","Vab","Vbc","Vca","Van","Vbn","Vcn","pf","Ia","Ib","Ic","action","type","payload","idx","value"],"sources":["/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/store.tsx"],"sourcesContent":["// import create from 'zustand';\nimport { createContext } from 'react';\nimport { configureStore } from '@reduxjs/toolkit';\nimport DataSample from './types/datasample.type';\n\n// export interface DemoState {\n//     currentSample: DataSample;\n//     idx: number;\n//     value: number;\n// }\n\nexport const store = configureStore({\n    reducer: {\n        currentSample: (state: DataSample = {\n            id: 0,\n            time: new Date(),\n            freq: 0,\n            Vab: 0,\n            Vbc: 0,\n            Vca: 0,\n            Van: 0,\n            Vbn: 0,\n            Vcn: 0,\n            pf: 0,\n            'Real Power': 0,\n            'Reactive Power': 0,\n            'Apparent Power': 0,\n            Ia: 0,\n            Ib: 0,\n            Ic: 0,\n            'P2 Ctrl Method': 0,\n            'P2 throttle setpt': 0,\n            'P2 current setpt': 0,\n            'P2 power setpt': 0,\n            'P2 voltage setpt': 0,\n            'P2 Vmax Limit': 0,\n            'P2 Vmin Limit': 0,\n            'P2 Dischg PWR limit': 0,\n            'P2 Chrg PWR limit': 0,\n            'P2 Current limit': 0,\n            'P2 Voltage': 0,\n            'P2 Power': 0,\n            'P2 Current': 0,\n            'P3 Ctrl Method': 0,\n            'P3 throttle setpt': 0,\n            'P3 current setpt': 0,\n            'P3 power setpt': 0,\n            'P3 voltage setpt': 0,\n            'P3 Vmax Limit': 0,\n            'P3 Vmin Limit': 0,\n            'P3 Dischg PWR limit': 0,\n            'P3 Chrg PWR limit': 0,\n            'P3 Current limit': 0,\n            'P3 Voltage': 0,\n            'P3 Power': 0,\n            'P3 Current': 0,\n            'Avg PM Temp': 0,\n            'AC PM Temp': 0,\n            'DC PM Temp': 0,\n            'Onboard Temp': 0,\n            'Fan Speed': 0,\n            'System Status': 0,\n            'System Power': 0,\n            'Grid Support Status': 0,\n            'Link Peak Voltage': 0,\n            'Link Peak Current': 0,\n            'Grid Level Status': 0,\n            'Grid Stop Status': 0,\n            'Pack P2 Voltage': 0,\n            'Pack P3 Voltage': 0,\n        }, action: any) => {\n            switch (action.type) {\n                case 'SET_CURRENT_SAMPLE':\n                    return action.payload;\n                default:\n                    return state;\n            }\n        },\n        idx: (state: number = 0, action: any) => {\n            switch (action.type) {\n                case 'SET_IDX':\n                    return action.payload;\n                default:\n                    return state;\n            }\n        },\n        value: (state: number = 0, action: any) => {\n            switch (action.type) {\n                case 'SET_VALUE':\n                    return action.payload;\n                default:\n                    return state;\n            }\n        },\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\n\n// export const useStore = create<DemoState>((set) => ({\n//     currentSample: {\n//         id: 0,\n//         time: new Date(),\n//         freq: 0,\n//         Vab: 0,\n//         Vbc: 0,\n//         Vca: 0,\n//         Van: 0,\n//         Vbn: 0,\n//         Vcn: 0,\n//         pf: 0,\n//         'Real Power': 0,\n//         'Reactive Power': 0,\n//         'Apparent Power': 0,\n//         Ia: 0,\n//         Ib: 0,\n//         Ic: 0,\n//         'P2 Ctrl Method': 0,\n//         'P2 throttle setpt': 0,\n//         'P2 current setpt': 0,\n//         'P2 power setpt': 0,\n//         'P2 voltage setpt': 0,\n//         'P2 Vmax Limit': 0,\n//         'P2 Vmin Limit': 0,\n//         'P2 Dischg PWR limit': 0,\n//         'P2 Chrg PWR limit': 0,\n//         'P2 Current limit': 0,\n//         'P2 Voltage': 0,\n//         'P2 Power': 0,\n//         'P2 Current': 0,\n//         'P3 Ctrl Method': 0,\n//         'P3 throttle setpt': 0,\n//         'P3 current setpt': 0,\n//         'P3 power setpt': 0,\n//         'P3 voltage setpt': 0,\n//         'P3 Vmax Limit': 0,\n//         'P3 Vmin Limit': 0,\n//         'P3 Dischg PWR limit': 0,\n//         'P3 Chrg PWR limit': 0,\n//         'P3 Current limit': 0,\n//         'P3 Voltage': 0,\n//         'P3 Power': 0,\n//         'P3 Current': 0,\n//         'Avg PM Temp': 0,\n//         'AC PM Temp': 0,\n//         'DC PM Temp': 0,\n//         'Onboard Temp': 0,\n//         'Fan Speed': 0,\n//         'System Status': 0,\n//         'System Power': 0,\n//         'Grid Support Status': 0,\n//         'Link Peak Voltage': 0,\n//         'Link Peak Current': 0,\n//         'Grid Level Status': 0,\n//         'Grid Stop Status': 0,\n//         'Pack P2 Voltage': 0,\n//         'Pack P3 Voltage': 0,\n//     },\n//     setCurrentSample: (sample: DataSample) => set(() => ({ currentSample: sample })),\n\n//     idx: 0,\n//     setIdx: (idx) =>\n//         set((state) => ({\n//             ...state,\n//             idx\n//         })),\n//     value: 0,\n//     setValue: (value) =>\n//         set((state) => ({\n//             ...state,\n//             value\n//         }))\n\n// }));\n\n"],"mappings":"AAAA;AAEA,SAASA,cAAT,QAA+B,kBAA/B;AAGA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,KAAK,GAAGD,cAAc,CAAC;EAChCE,OAAO,EAAE;IACLC,aAAa,EAAE,YAyDI;MAAA,IAzDHC,KAyDG,uEAzDiB;QAChCC,EAAE,EAAE,CAD4B;QAEhCC,IAAI,EAAE,IAAIC,IAAJ,EAF0B;QAGhCC,IAAI,EAAE,CAH0B;QAIhCC,GAAG,EAAE,CAJ2B;QAKhCC,GAAG,EAAE,CAL2B;QAMhCC,GAAG,EAAE,CAN2B;QAOhCC,GAAG,EAAE,CAP2B;QAQhCC,GAAG,EAAE,CAR2B;QAShCC,GAAG,EAAE,CAT2B;QAUhCC,EAAE,EAAE,CAV4B;QAWhC,cAAc,CAXkB;QAYhC,kBAAkB,CAZc;QAahC,kBAAkB,CAbc;QAchCC,EAAE,EAAE,CAd4B;QAehCC,EAAE,EAAE,CAf4B;QAgBhCC,EAAE,EAAE,CAhB4B;QAiBhC,kBAAkB,CAjBc;QAkBhC,qBAAqB,CAlBW;QAmBhC,oBAAoB,CAnBY;QAoBhC,kBAAkB,CApBc;QAqBhC,oBAAoB,CArBY;QAsBhC,iBAAiB,CAtBe;QAuBhC,iBAAiB,CAvBe;QAwBhC,uBAAuB,CAxBS;QAyBhC,qBAAqB,CAzBW;QA0BhC,oBAAoB,CA1BY;QA2BhC,cAAc,CA3BkB;QA4BhC,YAAY,CA5BoB;QA6BhC,cAAc,CA7BkB;QA8BhC,kBAAkB,CA9Bc;QA+BhC,qBAAqB,CA/BW;QAgChC,oBAAoB,CAhCY;QAiChC,kBAAkB,CAjCc;QAkChC,oBAAoB,CAlCY;QAmChC,iBAAiB,CAnCe;QAoChC,iBAAiB,CApCe;QAqChC,uBAAuB,CArCS;QAsChC,qBAAqB,CAtCW;QAuChC,oBAAoB,CAvCY;QAwChC,cAAc,CAxCkB;QAyChC,YAAY,CAzCoB;QA0ChC,cAAc,CA1CkB;QA2ChC,eAAe,CA3CiB;QA4ChC,cAAc,CA5CkB;QA6ChC,cAAc,CA7CkB;QA8ChC,gBAAgB,CA9CgB;QA+ChC,aAAa,CA/CmB;QAgDhC,iBAAiB,CAhDe;QAiDhC,gBAAgB,CAjDgB;QAkDhC,uBAAuB,CAlDS;QAmDhC,qBAAqB,CAnDW;QAoDhC,qBAAqB,CApDW;QAqDhC,qBAAqB,CArDW;QAsDhC,oBAAoB,CAtDY;QAuDhC,mBAAmB,CAvDa;QAwDhC,mBAAmB;MAxDa,CAyDjB;MAAA,IAAhBC,MAAgB;;MACf,QAAQA,MAAM,CAACC,IAAf;QACI,KAAK,oBAAL;UACI,OAAOD,MAAM,CAACE,OAAd;;QACJ;UACI,OAAOjB,KAAP;MAJR;IAMH,CAjEI;IAkELkB,GAAG,EAAE,YAAoC;MAAA,IAAnClB,KAAmC,uEAAnB,CAAmB;MAAA,IAAhBe,MAAgB;;MACrC,QAAQA,MAAM,CAACC,IAAf;QACI,KAAK,SAAL;UACI,OAAOD,MAAM,CAACE,OAAd;;QACJ;UACI,OAAOjB,KAAP;MAJR;IAMH,CAzEI;IA0ELmB,KAAK,EAAE,YAAoC;MAAA,IAAnCnB,KAAmC,uEAAnB,CAAmB;MAAA,IAAhBe,MAAgB;;MACvC,QAAQA,MAAM,CAACC,IAAf;QACI,KAAK,WAAL;UACI,OAAOD,MAAM,CAACE,OAAd;;QACJ;UACI,OAAOjB,KAAP;MAJR;IAMH;EAjFI;AADuB,CAAD,CAA5B,C,CA0FP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}