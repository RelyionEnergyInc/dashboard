{"ast":null,"code":"var _jsxFileName = \"/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/gaugeModels.tsx\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from \"react-chartjs-2\";\nimport ReactSpeedometer from \"react-d3-speedometer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst gaugeStyle = {\n  maxWidth: \"20vw\",\n  height: 250\n};\nexport const data = {\n  datasets: [{\n    label: '# of Votes',\n    data: [12, 19, 3, 5, 2, 3],\n    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n};\nconst options = {\n  responsive: true\n};\nexport function DoughnutModels(_ref) {\n  let {\n    values,\n    labels\n  } = _ref;\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Dataset 1',\n      data: values,\n      backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data,\n    options: options,\n    width: 300,\n    height: 300\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n} // export function GaugeModels({ value, levelCount, label, arcLengths }: GaugeModelProps) {\n\n_c = DoughnutModels;\nexport function GaugeModels(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: gaugeStyle,\n    children: /*#__PURE__*/_jsxDEV(ReactSpeedometer, {\n      value: props.val1,\n      minValue: 0,\n      maxValue: 100,\n      segments: 800,\n      maxSegmentLabels: 5 // startColor=\"#7CFC00\"\n      // endColor=\"#FF3131\"\n      ,\n      segmentColors: [\"#FF3131\", \"#7CFC00\", \"#7CFC00\", \"#7CFC00\", \"#FF3131\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_c2 = GaugeModels;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DoughnutModels\");\n$RefreshReg$(_c2, \"GaugeModels\");","map":{"version":3,"names":["Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","ReactSpeedometer","register","gaugeStyle","maxWidth","height","data","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","DoughnutModels","values","labels","GaugeModels","props","val1"],"sources":["/Users/jackdavey/GitProjects/Relyion/Dashboard/client/src/components/gaugeModels.tsx"],"sourcesContent":["import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from \"react-chartjs-2\";\nimport ReactSpeedometer from \"react-d3-speedometer\";\n\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\ninterface DoughnutModelProps {\n  values: number[];\n  labels: string[];\n}\n\ninterface GaugeModelProps {\n  value: number;\n  label: string;\n  levelCount: number;\n  arcLengths: number[];\n}\n\ninterface GaugeProps {\n  val1?: number;\n  unit1?: string;\n}\n\ninterface MeterProps {\n  value: number;\n  max: number;\n}\n\n\n\n\nconst gaugeStyle = {\n  maxWidth: \"20vw\",\n  height: 250,\n}\n\n\nexport const data = {\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\n\nconst options = {\n  responsive: true,\n}\n\nexport function DoughnutModels({ values, labels }: DoughnutModelProps) {\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Dataset 1',\n        data: values,\n        backgroundColor: ['rgba(255, 99, 132, 0.5)',\n          'rgba(54, 162, 235, 0.5)',\n          'rgba(255, 206, 86, 0.5)',\n        ],\n      },\n    ],\n  };\n  return (\n    <Doughnut data={data} options={options} width={300} height={300} />\n  );\n}\n\n\n// export function GaugeModels({ value, levelCount, label, arcLengths }: GaugeModelProps) {\n\nexport function GaugeModels(props: GaugeProps) {\n  return (\n    <div style={gaugeStyle}>\n      <ReactSpeedometer\n        value={props.val1}\n        minValue={0}\n        maxValue={100}\n        segments={800}\n        maxSegmentLabels={5}\n        // startColor=\"#7CFC00\"\n        // endColor=\"#FF3131\"\n        segmentColors={[\n          \"#FF3131\",\n          \"#7CFC00\",\n          \"#7CFC00\",\n          \"#7CFC00\",\n          \"#FF3131\",\n        ]}\n      />\n    </div>\n  );\n}"],"mappings":";AAAA,SAASA,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;;AAGAL,OAAO,CAACM,QAAR,CAAiBL,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;AA2BA,MAAMI,UAAU,GAAG;EACjBC,QAAQ,EAAE,MADO;EAEjBC,MAAM,EAAE;AAFS,CAAnB;AAMA,OAAO,MAAMC,IAAI,GAAG;EAClBC,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,YADT;IAEEF,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFR;IAGEG,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;IAWEC,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;IAmBEC,WAAW,EAAE;EAnBf,CADQ;AADQ,CAAb;AA0BP,MAAMC,OAAO,GAAG;EACdC,UAAU,EAAE;AADE,CAAhB;AAIA,OAAO,SAASC,cAAT,OAAgE;EAAA,IAAxC;IAAEC,MAAF;IAAUC;EAAV,CAAwC;EACrE,MAAMV,IAAI,GAAG;IACXU,MADW;IAEXT,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WADT;MAEEF,IAAI,EAAES,MAFR;MAGEN,eAAe,EAAE,CAAC,yBAAD,EACf,yBADe,EAEf,yBAFe;IAHnB,CADQ;EAFC,CAAb;EAaA,oBACE,QAAC,QAAD;IAAU,IAAI,EAAEH,IAAhB;IAAsB,OAAO,EAAEM,OAA/B;IAAwC,KAAK,EAAE,GAA/C;IAAoD,MAAM,EAAE;EAA5D;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,C,CAGD;;KApBgBE,c;AAsBhB,OAAO,SAASG,WAAT,CAAqBC,KAArB,EAAwC;EAC7C,oBACE;IAAK,KAAK,EAAEf,UAAZ;IAAA,uBACE,QAAC,gBAAD;MACE,KAAK,EAAEe,KAAK,CAACC,IADf;MAEE,QAAQ,EAAE,CAFZ;MAGE,QAAQ,EAAE,GAHZ;MAIE,QAAQ,EAAE,GAJZ;MAKE,gBAAgB,EAAE,CALpB,CAME;MACA;MAPF;MAQE,aAAa,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa;IARjB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;MArBeF,W"},"metadata":{},"sourceType":"module"}