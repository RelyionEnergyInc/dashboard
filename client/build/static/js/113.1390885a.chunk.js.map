{"version":3,"file":"static/js/113.1390885a.chunk.js","mappings":"+NAMe,SAASA,EAAWC,GAAQ,IAGjCC,EAHiC,gMAInCC,MAAQ,CAAEC,OAAQ,IAJiB,EAMnCC,eAAiB,SAAAD,GACb,EAAKE,SAAS,CAAEF,OAAQA,GAC3B,EARkC,gDAUnC,WACI,OAAOG,KAAKJ,MAAMC,OAAOI,KAAI,SAAUC,GACnC,IAAMC,EAAe,sBAARD,EAAEE,EAA4B,OAASF,EAAEE,EACtD,OACI,iBAAKC,UAAU,aAAf,WACI,uBAAIF,IADR,aAEWD,EAAEI,EAFb,aAEmBJ,EAAEK,EAFrB,aAE2BL,EAAEM,EAF7B,aAEmCN,EAAEO,EAFrC,OAAiCP,EAAEE,EAK1C,GACJ,GApBkC,oBAsBnC,WACI,OACI,SAAC,aAAD,WACI,4BACI,iBAAKC,UAAU,aAAf,2BACiB,2CADjB,KAEI,gBAAKA,UAAU,UAAf,SAA0BL,KAAKU,wBAEnC,SAAChB,EAAD,CAAQI,eAAgBE,KAAKF,qBAI5C,KAlCkC,GAGTa,EAAAA,WAkC9B,SAASC,IACL,IAAMC,EAAaC,SAASC,eAAe,WACrCC,EAAYC,OAAOD,WAAa,CAAC,EACvCE,EAAAA,OACIP,EAAAA,cAAoBhB,EAAiBqB,GACrCH,EAEP,CAOD,OANKC,SAASC,eAAe,WAGzBH,IAFAE,SAASK,iBAAiB,mBAAoBP,GAK3CjB,CACV,CAtDiB,qBAAXsB,SAA2BA,OAAON,MAAQA,E","sources":["test-hook.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"style-loader!css-loader!../css/styles.css\";\n// import \"style-loader!css-loader!../examples/example-styles.css\";\ntypeof window !== \"undefined\" && (window.React = React); // for devtools\n\nexport default function makeLayout(Layout) {\n    // Basic layout that mirrors the internals of its child layout by listening to `onLayoutChange`.\n    // It does not pass any other props to the Layout.\n    class ListeningLayout extends React.Component {\n        state = { layout: [] };\n\n        onLayoutChange = layout => {\n            this.setState({ layout: layout });\n        };\n\n        stringifyLayout() {\n            return this.state.layout.map(function (l) {\n                const name = l.i === \"__dropping-elem__\" ? \"drop\" : l.i;\n                return (\n                    <div className=\"layoutItem\" key={l.i}>\n                        <b>{name}</b>\n                        {`: [${l.x}, ${l.y}, ${l.w}, ${l.h}]`}\n                    </div>\n                );\n            });\n        }\n\n        render() {\n            return (\n                <React.StrictMode>\n                    <div>\n                        <div className=\"layoutJSON\">\n                            Displayed as <code>[x, y, w, h]</code>:\n                            <div className=\"columns\">{this.stringifyLayout()}</div>\n                        </div>\n                        <Layout onLayoutChange={this.onLayoutChange} />\n                    </div>\n                </React.StrictMode>\n            );\n        }\n    }\n\n    function run() {\n        const contentDiv = document.getElementById(\"content\");\n        const gridProps = window.gridProps || {};\n        ReactDOM.render(\n            React.createElement(ListeningLayout, gridProps),\n            contentDiv\n        );\n    }\n    if (!document.getElementById(\"content\")) {\n        document.addEventListener(\"DOMContentLoaded\", run);\n    } else {\n        run();\n    }\n\n    return ListeningLayout;\n}\n"],"names":["makeLayout","Layout","ListeningLayout","state","layout","onLayoutChange","setState","this","map","l","name","i","className","x","y","w","h","stringifyLayout","React","run","contentDiv","document","getElementById","gridProps","window","ReactDOM","addEventListener"],"sourceRoot":""}